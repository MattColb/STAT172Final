geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
ggsave("figures/number_of_seniors_by_puma.png", width=6, height=5)
#Predicted number of seniors on SNAP
ggplot(data = senior_data) +
geom_sf(aes(fill = seniors_on_fsstmp)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Predicted Number of Seniors on SNAP by PUMA",
fill = "Predicted number\nof Seniors\non SNAP")
ggsave("figures/number_on_seniors_fsstmp.png", width=6, height=5)
lr_ridge_coefs_fsstmp
exp(-.0885)
View(lr_ridge_fsstmp)
weighted.mean(acs_predicted_only_seniors$fsstmp_probabilities, acs_predicted_only_seniors$weight)
table(cps_data$FSWROUTY, cps_data$FSSTMPVALC_bin)
262/(262+197)
661/(661+1563)
table(cps_data$FSFOODS, cps_data$FSSTMPVALC_bin)
289/(289+171)
1161/(1161+5044)
table(cps_data$FSFOODS, cps_data$FSWROUTY)
table(cps_data$FSWROUTY)
729/(729_194)
729/(729+194)
714/(714+1046)
table(cps_data$FSFOODS, cps_data$FSWROUTY, cps_data$FSSTMPVALC_bin)
sum(table(cps_data$FSFOODS, cps_data$FSWROUTY, cps_data$FSSTMPVALC_bin))
216/2683
df <- as.data.frame(table(cps_data$FSFOODS, cps_data$FSWROUTY, cps_data$FSSTMPVALC_bin))
colnames(df) <- c("FSFOODS", "FSWROUTY", "FSSTMPVALC_bin", "Count")
print(df)
library(ggplot2)
ggplot(df, aes(x = FSFOODS, y = FSWROUTY, fill = Count)) +
geom_tile() +
facet_wrap(~ FSSTMPVALC_bin) +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "Relationship Between FSFOODS, FSWROUTY, and FSSTMPVALC_bin",
x = "FSFOODS",
y = "FSWROUTY",
fill = "Count")
cps_data <- cps_data %>% mutate(
sum_of_food_insecurity = FSFOODS + FSWROUTY + FSSTMPVALC_bin
)
cps_data$sum_of_food_insecurity
table(cps_data$sum_of_food_insecurity)
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity))
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity), binwidth=1)
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=elderly), binwidth=1) +
#######################################
#  Visualizing percentage of elderly  #
#######################################
acs_data <-acs_data %>%  mutate(
has_senior = as.factor(ifelse(elderly > 0, "Has Elderly", "Doesn't have Elderly")),
has_seniors_bin = ifelse(elderly > 0,1,0),
only_seniors = as.factor(ifelse(elderly == hhsize, "Only Elderly", "No Elderly")),
only_seniors_bin = ifelse(elderly==hhsize, 1, 0),
true_donut = as.factor(ifelse(donut != elderly, 1,0))
)
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=elderly), binwidth=1)
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=as.factor(ifelse(elderly==hhsize), "Only Elderly", "Not only elderly")),
binwidth=1)
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=as.factor(ifelse(elderly==hhsize, "Only Elderly", "Not only elderly"))),
binwidth=1)
colnames(cps_data)
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity), binwidth=1)
ggplot(data=cps_data) +
geom_boxplot(aes(x=FSSTMPVALC_bin_fact, fill=as.factor(ifelse(elderly >0, "Has Elderly", "No Elderly"))))
ggplot(data=cps_data) +
geom_boxplot(aes(x=FSSTMPVALC_bin_fact, fill=elderly))
ggplot(data=cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=elderly))
ggplot(data=cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=as.factor(ifelse(elderly > 0, "Has elderly", "No elderly"))))
ggplot(data=cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=as.factor(ifelse(elderly > 0, "Has elderly", "No elderly")))) +
scale_fill_brewer("Elders in household", palette="Dark2")
ggplot(data=cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=as.factor(ifelse(elderly > 0, "Has elderly", "No elderly")))) +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(x="Count", y="Are they on Food Stamps/SNAP?")
ggplot(data=cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=as.factor(ifelse(elderly > 0, "Has elderly", "No elderly"))), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(x="Count", y="Are they on Food Stamps/SNAP?")
ggplot(data=cps_data) +
geom_bar(aes(x=weighted.mean(FSSTMPVALC_bin_fact, weight), fill=as.factor(ifelse(elderly > 0, "Has elderly", "No elderly"))), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(x="Count", y="Are they on Food Stamps/SNAP?")
weighted.mean(cps_data$FSSTMPVALC_bin, cps_data$weight)
weighted.mean(cps_elderly$FSSTMPVALC_bin, cps_elderly$weight)
cps_elderly <- cps_data[cps_data$elderly > 1,]
weighted.mean(cps_data$FSSTMPVALC_bin, cps_data$weight)
weighted.mean(cps_elderly$FSSTMPVALC_bin, cps_elderly$weight)
mean(cps_elderly$FSSTMPVALC_bin)
mean(cps_data$FSSTMPVALC_bin)
ggplot(data=cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=as.factor(ifelse(elderly > 0, "Has elderly", "No elderly"))), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(x="Count", y="Are they on Food Stamps/SNAP?")
ggplot(data=cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=as.factor(ifelse(elderly > 0, "Has elderly", "No elderly"))), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
cps_elderly <- cps_data[cps_data$elderly >= 1,]
cps_nonelderly <- cps_data[cps_data$elderly < 1,]
#Weighted mean for FSSTMP
weighted.mean(cps_data$FSSTMPVALC_bin, cps_data$weight)
weighted.mean(cps_elderly$FSSTMPVALC_bin, cps_elderly$weight)
#Weighted mean for FSSTMP
weighted.mean(cps_nonelderly$FSSTMPVALC_bin, cps_data$weight)
cps_nonelderly <- cps_data[cps_data$elderly < 1,]
#Weighted mean for FSSTMP
weighted.mean(cps_nonelderly$FSSTMPVALC_bin, cps_data$weight)
#Weighted mean for FSSTMP
weighted.mean(cps_nonelderly$FSSTMPVALC_bin, cps_nonelderly$weight)
weighted.mean(cps_elderly$FSSTMPVALC_bin, cps_elderly$weight)
acs_data <-acs_data %>%  mutate(
has_senior = as.factor(ifelse(elderly < 1, "Doesn't have Elderly", "Has Elderly")),
has_seniors_bin = ifelse(elderly > 0,1,0),
only_seniors = as.factor(ifelse(elderly == hhsize, "Only Elderly", "Not only Elderly")),
only_seniors_bin = ifelse(elderly==hhsize, 1, 0),
true_donut = as.factor(ifelse(donut != elderly, 1,0))
)
ggplot(arrange(cps_data, has_elderly_fact, desc)) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
cps_data <- cps_data %>% mutate(
sum_of_food_insecurity = FSFOODS + FSWROUTY + FSSTMPVALC_bin,
has_elderly_fact = as.factor(ifelse(elderly > 0, "Has elderly", "No elderly"))
)
ggplot(arrange(cps_data, has_elderly_fact, desc)) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
?arrange
ggplot(arrange(cps_data, desc(has_elderly_fact))) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
ggplot(arrange(cps_data, has_elderly_fact)) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
ggplot(cps_data, order=has_elderly_fact) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
ggplot(cps_data, order=desc(has_elderly_fact)) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
ggplot(cps_data, order=desc(has_elderly_fact)) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=desc(has_elderly_fact)), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
ggplot(cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact, order=has_elderly_fact
), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
cps_data <- cps_data %>% mutate(
sum_of_food_insecurity = FSFOODS + FSWROUTY + FSSTMPVALC_bin,
has_elderly_fact = as.factor(ifelse(elderly > 0, "Has elderly", "Doesn't have elderly"))
)
ggplot(cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact, order=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Count", x="Are they on Food Stamps/SNAP?")
ggsave("./figures/fsstmp_household_elderly.png", width=6, height=5)
ggplot(cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact, order=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Proportion of households", x="Are they on Food Stamps/SNAP?") +
title("Proportion of households with elderly people on Food Stamps/SNAP")
ggsave("./figures/fsstmp_household_elderly.png", width=6, height=5)
ggplot(cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Proportion of households", x="Are they on Food Stamps/SNAP?") +
title("Proportion of households with elderly people on Food Stamps/SNAP")
acs_data <-acs_data %>%  mutate(
has_senior = as.factor(ifelse(elderly > 0, "Has Elderly", "Doesn't have Elderly")),
has_seniors_bin = ifelse(elderly > 0,1,0),
only_seniors = as.factor(ifelse(elderly == hhsize, "Only Elderly", "Not only Elderly")),
only_seniors_bin = ifelse(elderly==hhsize, 1, 0),
only_one_senior_bin = ifelse(elderly ==hsize & elderly==1, 1, 0),
true_donut = as.factor(ifelse(donut != elderly, 1,0))
)
acs_data <-acs_data %>%  mutate(
has_senior = as.factor(ifelse(elderly > 0, "Has Elderly", "Doesn't have Elderly")),
has_seniors_bin = ifelse(elderly > 0,1,0),
only_seniors = as.factor(ifelse(elderly == hhsize, "Only Elderly", "Not only Elderly")),
only_seniors_bin = ifelse(elderly==hhsize, 1, 0),
only_one_senior_bin = ifelse(elderly ==hhsize & elderly==1, 1, 0),
true_donut = as.factor(ifelse(donut != elderly, 1,0))
)
#Percentage of households with elderly
weighted.mean(acs_data$elderly >0, weight)
#Percentage of households with elderly
weighted.mean(acs_data$elderly >0, acs_data$weight)
#Percentage of households only elderly
weighted.mean(acs_data$elderly == acs_data$hhsize, acs_data$weight)
#Percentage of households with only one elderly
weigthed.mean(acs_data$only_one_senior_bin, acs_data$weight)
#Percentage of households with only one elderly
weighted.mean(acs_data$only_one_senior_bin, acs_data$weight)
senior_data <- read.csv("./data/iowa_seniors_by_puma.csv")
senior_data <- senior_data %>% mutate("PUMA" = as.character(GEOID))
senior_data <- map_data %>% left_join(senior_data, by="PUMA")
senior_data <- senior_data %>% mutate(
seniors_on_fsstmp = floor(proportion_on_assistance*senior_population)
)
ggplot(data = senior_data) +
geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
ggsave("figures/number_of_seniors_by_puma.png", width=6, height=5)
senior_dta
senior_data
arrange(senior_data, desc(senior_population))
acs_data
acs_data[acs_data$PUMA == 1902100,]
sw_iowa_puma <- acs_data[acs_data$PUMA == 1902100,]
weighted.mean(sw_iowa_puma$elderly >0, sw_iowa_puma$weight)
#Percentage of households only elderly
weighted.mean(sw_iowa_puma$elderly == sw_iowa_puma$hhsize, sw_iowa_puma$weight)
#Percentage of households with only one elderly
weighted.mean(sw_iowa_puma$only_one_senior_bin, sw_iowa_puma$weight)
source("C:/Users/mattc/Desktop/FA24/STAT172Final/code/fsstamp_analysis.R")
arrange(senior_data, desc(seniors_on_fsstmp))
sw_iowa_puma <- acs_data[acs_data$PUMA == 1901400,]
weighted.mean(sw_iowa_puma$elderly >0, sw_iowa_puma$weight)
#Percentage of households only elderly
weighted.mean(sw_iowa_puma$elderly == sw_iowa_puma$hhsize, sw_iowa_puma$weight)
#Percentage of households with only one elderly
weighted.mean(sw_iowa_puma$only_one_senior_bin, sw_iowa_puma$weight)
acs_data <-acs_data %>%  mutate(
has_senior = as.factor(ifelse(elderly > 0, "Has Elderly", "Doesn't have Elderly")),
has_seniors_bin = ifelse(elderly > 0,1,0),
only_seniors = as.factor(ifelse(elderly == hhsize, "Only Elderly", "Not only Elderly")),
only_seniors_bin = ifelse(elderly==hhsize, 1, 0),
only_one_senior_bin = ifelse(elderly ==hhsize & elderly==1, 1, 0),
true_donut = as.factor(ifelse(donut != elderly, 1,0))
)
sw_iowa_puma <- acs_data[acs_data$PUMA == 1901400,]
weighted.mean(sw_iowa_puma$elderly >0, sw_iowa_puma$weight)
#Percentage of households only elderly
weighted.mean(sw_iowa_puma$elderly == sw_iowa_puma$hhsize, sw_iowa_puma$weight)
#Percentage of households with only one elderly
weighted.mean(sw_iowa_puma$only_one_senior_bin, sw_iowa_puma$weight)
acs_dta
acs_predicted_only_seniors
coef(lr_lasso_fsstmp)
summary(lr_firths_fsstmp)
plot(lr_firths_fsstmp_rocCurve, print.thres=TRUE, print.auc=TRUE) #AUC = .887 (.775, .863)
confit(lr_firths_fsstmp)
lr_lasso_fsstmp
lr_firths_fsstmp
exp(-.075)
summary(lr_firths_fsstmp)["elderly"]
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=has_elderly_fact), binwidth=1) +
labs(x="Number of _", y="Count") +
title("How many _")
ggplot(cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Proportion of households", x="Are they on Food Stamps/SNAP?") +
title("Proportion of households with elderly people on Food Stamps/SNAP")
cps_data <- cps_data %>% mutate(
sum_of_food_insecurity = FSFOODS + FSWROUTY + FSSTMPVALC_bin,
has_elderly_fact = as.factor(ifelse(elderly > 0, "Has elderly", "Doesn't have elderly"))
)
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=has_elderly_fact), binwidth=1) +
labs(x="Number of _", y="Count") +
title("How many _")
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=has_elderly_fact), binwidth=1) +
labs(x="Number of food insecurity indicators", y="Count") +
title("")
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=has_elderly_fact), binwidth=1) +
labs(x="Number of food insecurity indicators", y="Count") +
title("") +
scale_fill_brewer("Seniors in household", palette="Dark2")
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=has_elderly_fact), binwidth=1) +
labs(x="Number of food insecurity indicators", y="Count") +
title("Total investigated food insecurity indicators") +
scale_fill_brewer("Seniors in household", palette="Dark2")
nrow(cps_data)
nrow(cps_data)-5737
nrow(cps_data)-5737/(nrow(cps_data))
(nrow(cps_data)-5737)/(nrow(cps_data))
ggplot(cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Proportion of households", x="Are they on Food Stamps/SNAP?") +
title("Proportion of households with elderly people on Food Stamps/SNAP")
ggplot(cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Proportion of households", x="Are they on Food Stamps/SNAP?") +
ggtitle("Proportion of households with elderly people on Food Stamps/SNAP")+
title("Proportion of households with elderly people on Food Stamps/SNAP")
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=has_elderly_fact), binwidth=1) +
labs(x="Number of food insecurity indicators", y="Count") +
title("Total investigated food insecurity indicators") +
ggtitle("Total investigated food insecurity indicators") +
scale_fill_brewer("Seniors in household", palette="Dark2")
table(cps_data$FSFOODS, cps_data$FSWROUTY, cps_data$FSSTMPVALC_bin)
table(cps_data$FSWROUTY, cps_data$FSSTMPVALC_bin)
table(cps_data$FSWROUTY)
NA
cps_data$FSWROUTY
unique(cps_data$FSWROUTY)
rm(list=ls())
library(tidyverse)
library(knitr)
library(tibble)
library(ggthemes)
library(logistf)
library(glmnet)
library(haven)
library(pROC)
library(RColorBrewer)
library(randomForest)
library(ggplot2)
library(reshape2)
library(randomForest)
library(logistf)
source("code/clean_cps.R")
############ Clean Y-Variable ############
# change y-variable into factor
cps_data$FSWROUTY_binchar <- ifelse(cps_data$FSWROUTY == 0, "No", "Yes")
# handle missing values
cps_data <- cps_data[!is.na(cps_data$FSWROUTY_binchar),]
# cps_data <- cps_data %>% mutate(FSWROUTY_bin = as.factor(FSWROUTY_binchar))
cps_data <- cps_data %>% mutate(FSWROUTY_bin = ifelse(FSWROUTY_binchar == "No", 0, 1))
cps_data
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(knitr)
library(tibble)
library(ggthemes)
library(logistf)
library(glmnet)
library(haven)
library(pROC)
library(RColorBrewer)
library(randomForest)
source("./code/clean_cps.R")
nrow(cps_data)-5737
table(cps_data$FSWROUTY)
rm(list=ls())
library(tidyverse)
library(knitr)
library(tibble)
library(ggthemes)
library(logistf)
library(glmnet)
library(haven)
library(pROC)
library(RColorBrewer)
library(randomForest)
library(ggplot2)
library(reshape2)
library(randomForest)
library(logistf)
source("code/clean_cps.R")
############ Clean Y-Variable ############
# change y-variable into factor
cps_data$FSWROUTY_binchar <- ifelse(cps_data$FSWROUTY == 0, "No", "Yes")
# handle missing values
cps_data <- cps_data[!is.na(cps_data$FSWROUTY_binchar),]
# cps_data <- cps_data %>% mutate(FSWROUTY_bin = as.factor(FSWROUTY_binchar))
cps_data <- cps_data %>% mutate(FSWROUTY_bin = ifelse(FSWROUTY_binchar == "No", 0, 1))
table(cps_data$FSWROUTY_bin)
source("C:/Users/mattc/Desktop/FA24/STAT172Final/code/visualizations_and_general_analysis.R")
#Weighted mean for FSSTMP
weighted.mean(cps_data$FSSTMPVALC_bin, cps_data$weight)
weighted.mean(cps_elderly$FSSTMPVALC_bin, cps_elderly$weight)
cps_elderly <- cps_data[cps_data$elderly >= 1,]
weighted.mean(cps_elderly$FSSTMPVALC_bin, cps_elderly$weight)
ggplot(data=acs_data) +
geom_histogram(aes(x=hhsize, fill=has_senior), binwidth=1) +
scale_fill_brewer("Does household\nhave elderly", palette="Dark2") +
labs(x="Household Size", y="Count") + title("ACS Households with elderly")
ggplot(cps_data) +
geom_bar(aes(x=FSSTMPVALC_bin_fact, fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Proportion of households", x="Are they on Food Stamps/SNAP?") +
ggtitle("Proportion of households with elderly people on Food Stamps/SNAP")+
title("Proportion of households with elderly people on Food Stamps/SNAP")
cps_data
colnames(cps_data)
ggplot(cps_data) +
geom_bar(aes(x=as.factor(FSSTMPVALC_bin_char), fill=has_elderly_fact), position="fill") +
scale_fill_brewer("Elders in household", palette="Dark2") +
labs(y="Proportion of households", x="Are they on Food Stamps/SNAP?") +
ggtitle("Proportion of households with elderly people on Food Stamps/SNAP")+
title("Proportion of households with elderly people on Food Stamps/SNAP")
ggsave("./figures/fsstmp_household_elderly.png", width=6, height=5)
cps_data$FSSTMPVALC_bin
ggsave("./figures/fsstmp_household_elderly.png", width=8, height=5)
ggplot(data=cps_data) +
geom_histogram(aes(x=sum_of_food_insecurity, fill=has_elderly_fact), binwidth=1) +
labs(x="Number of food insecurity indicators", y="Count") +
title("Total investigated food insecurity indicators") +
ggtitle("Total investigated food insecurity indicators") +
scale_fill_brewer("Seniors in household", palette="Dark2")
source("C:/Users/mattc/Desktop/FA24/STAT172Final/code/fsstamp_analysis.R")
arrange(senior_data, desc(seniors_on_fsstmp))
test_data <- senior_data[PUMA == 1902300,]
ggplot(data = test_data) +
geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
test_data <- senior_data[senior_data$PUMA == 1902300,]
ggplot(data = test_data) +
geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
ggplot(data = senior_data) +
geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
test_data <- senior_data[senior_data$PUMA == 1900700,]
ggplot(data = senior_data) +
geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
ggplot(data = test_data) +
geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
test_data <- senior_data[senior_data$PUMA == 1901400,]
ggplot(data = test_data) +
geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
ggplot(data = senior_data) +
geom_sf(aes(fill = senior_population)) +
scale_fill_viridis_c(option = "plasma") +  # Adjust color palette as needed
theme_minimal() +
labs(title = "Total Population of Seniors by PUMA",
fill = "Population of\nSeniors")
test_data
sw_iowa_puma <- acs_data[acs_data$PUMA == 1901400,]
weighted.mean(sw_iowa_puma$elderly >0, sw_iowa_puma$weight)
#Percentage of households only elderly
weighted.mean(sw_iowa_puma$elderly == sw_iowa_puma$hhsize, sw_iowa_puma$weight)
#Percentage of households with only one elderly
weighted.mean(sw_iowa_puma$only_one_senior_bin, sw_iowa_puma$weight)
acs_data <-acs_data %>%  mutate(
has_senior = as.factor(ifelse(elderly > 0, "Has Elderly", "Doesn't have Elderly")),
has_seniors_bin = ifelse(elderly > 0,1,0),
only_seniors = as.factor(ifelse(elderly == hhsize, "Only Elderly", "Not only Elderly")),
only_seniors_bin = ifelse(elderly==hhsize, 1, 0),
only_one_senior_bin = ifelse(elderly ==hhsize & elderly==1, 1, 0),
true_donut = as.factor(ifelse(donut != elderly, 1,0))
)
#Percentage of households with only one elderly
weighted.mean(sw_iowa_puma$only_one_senior_bin, sw_iowa_puma$weight)
acs_data <-acs_data %>%  mutate(
has_senior = as.factor(ifelse(elderly > 0, "Has Elderly", "Doesn't have Elderly")),
has_seniors_bin = ifelse(elderly > 0,1,0),
only_seniors = as.factor(ifelse(elderly == hhsize, "Only Elderly", "Not only Elderly")),
only_seniors_bin = ifelse(elderly==hhsize, 1, 0),
only_one_senior_bin = ifelse(elderly ==hhsize & elderly==1, 1, 0),
true_donut = as.factor(ifelse(donut != elderly, 1,0))
)
#Percentage of households with only one elderly
weighted.mean(sw_iowa_puma$only_one_senior_bin, sw_iowa_puma$weight)
sw_iowa_puma <- acs_data[acs_data$PUMA == 1901400,]
#Percentage of households with only one elderly
weighted.mean(sw_iowa_puma$only_one_senior_bin, sw_iowa_puma$weight)
sw_iowa_puma <- acs_data[acs_data$PUMA == 1902100,]
weighted.mean(sw_iowa_puma$elderly >0, sw_iowa_puma$weight)
#Percentage of households only elderly
weighted.mean(sw_iowa_puma$elderly == sw_iowa_puma$hhsize, sw_iowa_puma$weight)
#Percentage of households with only one elderly
weighted.mean(sw_iowa_puma$only_one_senior_bin, sw_iowa_puma$weight)
